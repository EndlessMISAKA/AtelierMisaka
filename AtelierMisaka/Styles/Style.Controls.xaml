<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vs="clr-namespace:AtelierMisaka.Views"
                    xmlns:local="clr-namespace:AtelierMisaka">

    <Style TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <Style TargetType="{x:Type Thumb}" x:Key="ScrollBarThumb">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Rectangle Fill="#90000000" RadiusX="5" RadiusY="5"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type RepeatButton}" x:Key="VerticalScrollBarPageButton">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollBar}" x:Key="for_scrollbar">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Border Width="{TemplateBinding Width}" Background="{TemplateBinding Background}" HorizontalAlignment="Center" CornerRadius="5">
                        </Border>
                        <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollViewer}" x:Key="for_scrollviewer">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CanContentScroll" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <Grid Background="{TemplateBinding Background}">
                            <ScrollContentPresenter Content="{TemplateBinding Content}" CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" HorizontalAlignment="Right" Maximum="{TemplateBinding ScrollableHeight}"  
                                       Orientation="Vertical" Style="{StaticResource for_scrollbar}" ViewportSize="{TemplateBinding ViewportHeight}"  
                                       Value="{TemplateBinding VerticalOffset}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollChanged">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" 
                                            Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:1"/>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"  
                                            Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:1" BeginTime="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter" SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"  
                                            Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave" SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"  
                                            Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListBoxItem}" x:Key="LBI_Download">
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="LightBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListBoxItem}" x:Key="LBI_Document">
        <Setter Property="Width" Value="425"/>
        <Setter Property="Height" Value="360"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="LightBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListBoxItem}" x:Key="LBI_Artist">
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#333337"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#3F3F46"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}" x:Key="RB_Setting">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="Height" Value="80"/>
        <Setter Property="FontSize" Value="50"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Border x:Name="radioButtonBorder" BorderThickness="0"/>
                        <TextBlock x:Name="tb" Foreground="Black" FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding Content}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="tb" Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="tb" Property="Foreground" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="CB_Setting">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Margin" Value="-60,0,760,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <TextBlock Foreground="Black" FontSize="28" Text="{TemplateBinding Content}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        <TextBlock x:Name="tb" Foreground="White" FontSize="28" Text="{TemplateBinding Content}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="tb" Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BTN_Setting">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bg" Height="{TemplateBinding Height}" 
                            Width="{TemplateBinding Width}" Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bg" Property="Background" Value="#3F3F41"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type vs:ButtonEx}" x:Key="BTN_Play">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="#2D2D30"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="ToolTip" Value=""/>
        <Setter Property="CommandParameter" Value="{Binding}"/>
        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type vs:Downloader}}, Path=DataContext.DownloadCommand}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vs:ButtonEx}">
                    <Border Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Background="{TemplateBinding Background}">
                        <Image x:Name="img" Width="40"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#3F3F41"/>
                        </Trigger>
                        <Trigger Property="DLS" Value="{x:Static local:DownloadStatus.Downloading}">
                            <Setter TargetName="img" Property="Source" Value="/AtelierMisaka;component/Resources/Btn_Paused.png"/>
                            <Setter Property="ToolTip" Value="{DynamicResource Text_PauseDownload}"/>
                        </Trigger>
                        <Trigger Property="DLS" Value="{x:Static local:DownloadStatus.Paused}">
                            <Setter TargetName="img" Property="Source" Value="/AtelierMisaka;component/Resources/Btn_Start.png"/>
                            <Setter Property="ToolTip" Value="{DynamicResource Text_StartDownload}"/>
                        </Trigger>
                        <Trigger Property="DLS" Value="{x:Static local:DownloadStatus.Waiting}">
                            <Setter TargetName="img" Property="Source" Value="/AtelierMisaka;component/Resources/Btn_Start.png"/>
                            <Setter Property="ToolTip" Value="{DynamicResource Text_StartDownload}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type vs:ButtonEx}" x:Key="BTN_Ex">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="#2D2D30"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="ToolTip" Value="{DynamicResource Text_PauseAndStart}"/>
        <Setter Property="CommandParameter" Value="{Binding}"/>
        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type vs:Downloader}}, Path=DataContext.OptionCommand}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vs:ButtonEx}">
                    <Border Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Background="{TemplateBinding Background}">
                        <Image x:Name="img" Width="40" Source="/AtelierMisaka;component/Resources/Btn_ReDo.png"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#3F3F41"/>
                        </Trigger>
                        <Trigger Property="DLS" Value="{x:Static local:DownloadStatus.Waiting}">
                            <Setter TargetName="img" Property="Source" Value="/AtelierMisaka;component/Resources/Btn_ToFirst.png"/>
                            <Setter Property="ToolTip" Value="{DynamicResource Text_GoFirst}"/>
                        </Trigger>
                        <Trigger Property="DLS" Value="{x:Static local:DownloadStatus.Cancel}">
                            <Setter TargetName="img" Property="Source" Value="/AtelierMisaka;component/Resources/Btn_ReDo.png"/>
                            <Setter Property="ToolTip" Value="{DynamicResource Text_ReDownload}"/>
                        </Trigger>
                        <Trigger Property="DLS" Value="{x:Static local:DownloadStatus.Common}">
                            <Setter TargetName="img" Property="Source" Value="/AtelierMisaka;component/Resources/Status_Cancel.png"/>
                            <Setter Property="ToolTip" Value="{DynamicResource Text_CancelDownload}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type vs:ButtonEx}" x:Key="BTN_Open">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="#2D2D30"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="ToolTip" Value="{DynamicResource Text_LookPost}"/>
        <Setter Property="CommandParameter" Value="{Binding}"/>
        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type vs:Downloader}}, Path=DataContext.OpenDocumentCommand}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vs:ButtonEx}">
                    <Border Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Background="{TemplateBinding Background}">
                        <Image x:Name="img" Width="40" Source="/AtelierMisaka;component/Resources/Btn_Look.png"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#3F3F41"/>
                        </Trigger>
                        <Trigger Property="OpenType" Value="File">
                            <Setter TargetName="img" Property="Source" Value="/AtelierMisaka;component/Resources/Btn_OpenFile.png"/>
                            <Setter Property="ToolTip" Value="{DynamicResource Text_OpenFile}"/>
                            <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type vs:Downloader}}, Path=DataContext.OpenFileCommand}"/>
                        </Trigger>
                        <Trigger Property="OpenType" Value="Folder">
                            <Setter TargetName="img" Property="Source" Value="/AtelierMisaka;component/Resources/Btn_OpenFolder.png"/>
                            <Setter Property="ToolTip" Value="{DynamicResource Text_OpenFolder}"/>
                            <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type vs:Downloader}}, Path=DataContext.OpenFolderCommand}"/>
                        </Trigger>
                        <Trigger Property="OpenType" Value="Cancel">
                            <Setter TargetName="img" Property="Source" Value="/AtelierMisaka;component/Resources/Status_Cancel.png"/>
                            <Setter Property="ToolTip" Value="{DynamicResource Text_CancelDownload}"/>
                            <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type vs:Downloader}}, Path=DataContext.CancelCommand}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TBL_Setting">
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="0,0,760,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TBL_DL">
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TB_Setting">
        <Setter Property="Background" Value="#333337"/>
        <Setter Property="BorderBrush" Value="#3F3F46"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="730"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="20,0"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" VerticalAlignment="Center"
                                      HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        <TextBlock x:Name="watermark" Text="{TemplateBinding Tag}" FontSize="{TemplateBinding FontSize}"
                                   Foreground="Gray" Visibility="Collapsed" VerticalAlignment="Center" Margin="10,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#007ACC"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="watermark" Property="Visibility" Value="Visible"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ProgressBar}" x:Key="PB_Download">
        <Setter Property="Width" Value="140"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Maximum" Value="100"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="Root">
                        <Border x:Name="PART_Track" Background="{TemplateBinding Background}" CornerRadius="5"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Border x:Name="PART_Indicator" HorizontalAlignment="Left" Background="{TemplateBinding Foreground}"
                                CornerRadius="5" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Pa_Load">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="200"/>
        <Setter Property="StrokeThickness" Value="15"/>
        <Setter Property="StrokeEndLineCap" Value="Round"/>
        <Setter Property="StrokeStartLineCap" Value="Round"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform CenterX="100" CenterY="100"/>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="ComboBoxToggleButton">
        <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
            <Border Background="White" Opacity="0" Cursor="Hand"/>
            <Path x:Name="Arrow" Data="M0,0L9,9 M9,9L18,0" StrokeThickness="2" Stroke="White" Height="10"
                  HorizontalAlignment="Right" Margin="10,0"
                  VerticalAlignment="Center" StrokeEndLineCap="Round" StrokeStartLineCap="Round"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleY="-1" CenterX="9" CenterY="4.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}" x:Key="ComB">
        <Setter Property="MaxDropDownHeight" Value="200"/>
        <Setter Property="Background" Value="#333337"/>
        <Setter Property="BorderBrush" Value="#3F3F46"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Height" Value="40"/>
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border x:Name="_borderbg" Background="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                    <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center"
                                                      HorizontalAlignment="Left" Margin="10,0"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="_borderbg" Property="Background" Value="#333337" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="_borderbg" Property="Background" Value="#333337" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Grid.ColumnSpan="2"/>
                        <ContentPresenter x:Name="PART_SelectedItem" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          HorizontalAlignment="Center"
                                          IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center" />
                        <ToggleButton Grid.Column="1" Template="{StaticResource ComboBoxToggleButton}"
                                      x:Name="ToggleButton" Focusable="false" ClickMode="Press"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Width="{TemplateBinding Width}"
                               Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Border x:Name="DropDown"  BorderBrush="Gray" BorderThickness="1,0,1,1" SnapsToDevicePixels="True"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="0.5"/>
                                </Border.Effect>
                                <ScrollViewer Margin="1" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Disabled"
                                              VerticalScrollBarVisibility="Auto" CanContentScroll="True" Style="{StaticResource for_scrollviewer}">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="Black"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="ComB_Lang">
        <Setter Property="MaxDropDownHeight" Value="200"/>
        <Setter Property="Background" Value="#333337"/>
        <Setter Property="BorderBrush" Value="#3F3F46"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="180"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Height" Value="40"/>
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border x:Name="_borderbg" Background="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                    <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center"
                                                      HorizontalAlignment="Left" Margin="10,0"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="_borderbg" Property="Background" Value="#333337" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="_borderbg" Property="Background" Value="#333337" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Grid.ColumnSpan="2"/>
                        <TextBlock x:Name="PART_ShowItem" Text="{TemplateBinding Text}" VerticalAlignment="Center" Grid.ColumnSpan="2"
                                   HorizontalAlignment="Left" Margin="{TemplateBinding Padding}"/>
                        <ToggleButton Grid.Column="1" Template="{StaticResource ComboBoxToggleButton}"
                                      x:Name="ToggleButton" Focusable="false" ClickMode="Press"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Width="{TemplateBinding Width}"
                               Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Border x:Name="DropDown"  BorderBrush="Gray" BorderThickness="1,0,1,1" SnapsToDevicePixels="True"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="0.5"/>
                                </Border.Effect>
                                <ScrollViewer Margin="1" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Disabled"
                                              VerticalScrollBarVisibility="Auto" CanContentScroll="True" Style="{StaticResource for_scrollviewer}">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="Black"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>